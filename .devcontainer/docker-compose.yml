version: "3.8"

services:
  # PostgreSQL Database for ZenML metadata
  postgres:
    image: postgres:15-alpine
    container_name: zenml-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: zenml
      POSTGRES_PASSWORD: zenml
      POSTGRES_DB: zenml
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zenml"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zenml-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: zenml-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC API
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - zenml-network

  # ZenML Server
  zenml-server:
    image: zenmldocker/zenml-server:latest
    container_name: zenml-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ZENML_STORE_URL: postgresql://zenml:zenml@postgres:5432/zenml
      ZENML_DEFAULT_USER_NAME: default
      ZENML_DEFAULT_USER_PASSWORD: zenml
      ZENML_SERVER_AUTO_ACTIVATE: "true"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - zenml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Development Container
  zenml-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zenml-dev-container
    restart: unless-stopped
    volumes:
      - ../:/workspace:cached
    command: sleep infinity
    environment:
      ZENML_SERVER_URL: http://zenml-server:8080
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: zenml
      POSTGRES_PASSWORD: zenml
      POSTGRES_DB: zenml
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      QDRANT_GRPC_PORT: 6334
    depends_on:
      - postgres
      - qdrant
      - zenml-server
    networks:
      - zenml-network

networks:
  zenml-network:
    driver: bridge

volumes:
  postgres-data:
  qdrant-data:
